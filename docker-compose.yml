version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: reachinbox_postgres
    environment:
      POSTGRES_DB: reachinbox
      POSTGRES_USER: reachinbox_user
      POSTGRES_PASSWORD: reachinbox_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - reachinbox_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: reachinbox_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reachinbox_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: reachinbox_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - reachinbox_network
    restart: unless-stopped

  # ChromaDB (Vector Database)
  chromadb:
    image: chromadb/chroma:latest
    container_name: reachinbox_chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    networks:
      - reachinbox_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reachinbox_backend
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://reachinbox_user:reachinbox_password@postgres:5432/reachinbox
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - CHROMA_PERSIST_DIRECTORY=/app/chroma_db
    volumes:
      - ./logs:/app/logs
      - ./chroma_db:/app/chroma_db
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - chromadb
    networks:
      - reachinbox_network
    restart: unless-stopped
    command: npm run start

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: reachinbox_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:3000
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - reachinbox_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: reachinbox_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - reachinbox_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  chroma_data:

networks:
  reachinbox_network:
    driver: bridge
